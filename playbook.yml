---
- name: Deployment of Genre Classification application
  hosts: all
  become: yes
  vars:
    remote_dir: "/home/ubuntu/genre_clf"
    local_files:
      - "server/requirements.txt"
      - "server/app.py"
      - "server/utils/feature_extraction.py"
      - "server/model/min_max_scaler.pkl"
      - "server/model/xgb_mgen.pkl"
      - "server/templates/index.html"
      - "server/templates/result.html"
  tasks:

    - name: Ensure the target directory exists
      ansible.builtin.file:
        path: "{{ remote_dir }}/templates"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Ensure the templates directory exists
      ansible.builtin.file:
        path: "{{ remote_dir }}/templates"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Copy files to remote server
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "{{ remote_dir }}/"
      loop: "{{ local_files }}"

    - name: Update
      ansible.builtin.shell: 
        cmd: sudo apt update
        
    - name: Install python
      ansible.builtin.shell: 
        cmd: sudo apt install --yes --force-yes python3-pip

    - name: Install all requirement
      ansible.builtin.shell: 
        cmd: pip install -r genre_clf/requirements.txt

    - name: Change ownership of files to ubuntu
      ansible.builtin.file:
        path: "{{ remote_dir }}/templates/{{ item }}"
        owner: ubuntu
        group: ubuntu
        mode: '0644'
      loop:
        - "index.html"
        - "result.html"

    - name: Start python server asynchronously
      ansible.builtin.shell:
        cmd: "python3 /home/ubuntu/genre_clf/app.py"
      async: 3600  # Maximum running time (1 hour)
      poll: 0      # Do not wait for completion, continue with next tasks
      register: python_output

    - name: List files in the remote directory
      ansible.builtin.shell:
        cmd: ls -l {{ remote_dir }}/templates
      register: file_listing

    - name: Debug file listing
      ansible.builtin.debug:
        msg: "{{ file_listing.stdout }}"
    
    - name: Print the website link
      ansible.builtin.debug:
        msg: "You can access the application at: http://{{ ansible_host }}:5000/"
